(()=>{"use strict";var t={};function e(t,e){const i=t<e,s=t>=e*(e-1),l=t%e==0,n=(t+1)%e==0;return i&&l?"top-left":i&&n?"top-right":s&&l?"bottom-left":s&&n?"bottom-right":i?"top":s?"bottom":l?"left":n?"right":"center"}t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var i=t.g.document;if(!e&&i&&(i.currentScript&&(e=i.currentScript.src),!e)){var s=i.getElementsByTagName("script");s.length&&(e=s[s.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})();class i{constructor(t){this.elemModal=null,this.eventShowModal=null,this.eventHideModal=null,this.hiding=!1,this.destroyed=!1,this.animationSpeed=200,this.options=t||{},this.createModal(),this.elemModal.addEventListener("click",this.handlerCloseModal.bind(this)),this.eventShowModal=new CustomEvent("show.modalFunc",{detail:this.elemModal}),this.eventHideModal=new CustomEvent("hide.modalFunc",{detail:this.elemModal})}createModal(){this.elemModal=document.createElement("div");let t,e="";if(this.elemModal.classList.add("modalFunc"),t='<div class="modal__backdrop" data-dismiss="modalFunc"><div class="modal__content"><div class="modal__header"><div class="modal__title" data-modalFunc="title">{{title}}</div><span class="modal__btn-close" data-dismiss="modalFunc" title="Закрыть">×</span></div><div class="modal__body" data-modalFunc="content">{{content}}</div>{{footer}}</div></div>'.replace("{{title}}",this.options.title||"Новое окно"),t=t.replace("{{content}}",this.options.content||""),this.options.footerButtons){for(const t of this.options.footerButtons){let i='<button type="button" class="{{button_class}}" data-handler={{button_handler}}>{{button_text}}</button>'.replace("{{button_class}}",t.class);i=i.replace("{{button_handler}}",t.handler),i=i.replace("{{button_text}}",t.text),e+=i}e='<div class="modal__footer">{{buttons}}</div>'.replace("{{buttons}}",e)}t=t.replace("{{footer}}",e),this.elemModal.innerHTML=t,document.body.append(this.elemModal)}setupEventListeners(){this.elemModal.removeEventListener("click",this.handlerCloseModal),this.handlerCloseModalBound=this.handlerCloseModal.bind(this),this.elemModal.addEventListener("click",this.handlerCloseModalBound)}show(){this.destroyed||this.hiding||(this.elemModal.classList.add("modal__show"),document.dispatchEvent(this.eventShowModal))}hide(){this.hiding=!0,this.elemModal.classList.remove("modal__show"),this.elemModal.classList.add("modal__hiding"),setTimeout((()=>{this.elemModal.classList.remove("modal__hiding"),this.hiding=!1}),this.animationSpeed),document.dispatchEvent(this.eventHideModal)}handlerCloseModal(t){("modalFunc"===t.target.dataset.dismiss||t.target.dataset.handler)&&this.hide()}destroy(){this.elemModal.parentElement&&this.elemModal.parentElement.removeChild(this.elemModal),this.handlerCloseModalBound&&this.elemModal.removeEventListener("click",this.handlerCloseModalBound),this.destroyed=!0}setContent(t){this.elemModal.querySelector('[data-modalFunc="content"]').innerHTML=t}setTitle(t){this.elemModal.querySelector('[data-modalFunc="title"]').innerHTML=t}}let s=null;function l(t){const e=function(t){const e=t**2;return Array.from({length:e/8},((t,e)=>8*e)).flatMap((t=>[t,t+1]))}(t);let i;do{i=Math.floor(Math.random()*e.length)}while(e[i]===s);return s=e[i],s}const n={pointer:"pointer",notallowed:"not-allowed",hammer:`url('${t.p+"img/hammer_small.png"}'), not-allowed`};class o{constructor(t){this.hitCount=0,this.missCount=0,this.container=t,this.initUI()}initUI(){if(!(this.container instanceof HTMLElement))throw new Error("container is not HTMLElement");this.container.insertAdjacentHTML("afterbegin",`\n    <div class="click-counter">\n        <div>Hit counts: <span class="hit-count">${this.getHitCount()}</span></div>\n        <div>Miss counts: <span class="miss-count">${this.getMissCount()}</span></div>\n    </div>\n    `),this.hitCountEl=this.container.querySelector(".hit-count"),this.missCountEl=this.container.querySelector(".miss-count")}incrementHit(){this.hitCount+=1,this.updateUI()}incrementMiss(){this.missCount+=1,this.updateUI()}updateUI(){this.hitCountEl.textContent=this.getHitCount(),this.missCountEl.textContent=this.getMissCount()}getHitCount(){return this.hitCount}getMissCount(){return this.missCount}reset(){this.missCount=0,this.hitCount=0,this.updateUI()}}class a{constructor(t){this.gamePlay=t,this.indexSelect=null,this.clickCounter=null,this.currentGoblinPosition=null,this.onCellClick=this.onCellClick.bind(this),this.onCellEnter=this.onCellEnter.bind(this),this.onCellLeave=this.onCellLeave.bind(this),this.isGameActive=!0}init(){this.events(),this.gamePlay.drawUi("prairie"),this.clickCounter=new o(document.querySelector("#game-container")),this.gamePlay.onRestart=()=>this.reset(),this.showCharacter()}events(){this.gamePlay.addCellEnterListener(this.onCellEnter),this.gamePlay.addCellLeaveListener(this.onCellLeave),this.gamePlay.addCellClickListener(this.onCellClick)}onCellClick(t){this.reactOnClick(t)}onCellEnter(t){this.gamePlay.setCursor(n.hammer),document.querySelector(".selected-generic")&&this.gamePlay.deselectCell(this.indexSelect),this.gamePlay.selectCell(t),this.indexSelect=t}onCellLeave(t){this.gamePlay.hideCellTooltip(t),this.gamePlay.setCursor(n.pointer)}showCharacter(){this.timerId&&clearInterval(this.timerId),this.timerId=setInterval((()=>{if(!this.isGameActive)return void clearInterval(this.timerId);if(null!==this.currentGoblinPosition&&(this.clickCounter.incrementMiss(),this.clickCounter.getMissCount()>=5))return this.gamePlay.showModalMessage("Вы проиграли!","129335"),this.isGameActive=!1,void clearInterval(this.timerId);const t=l(this.gamePlay.boardSize);this.currentGoblinPosition=t,this.gamePlay.redrawPositions(t)}),1e3),setTimeout((()=>this.resetTimer()),5e5)}resetTimer(){clearInterval(this.timerId)}reactOnClick(t){if(!this.isGameActive)return;if(document.querySelectorAll(".cell")[t].querySelector(".generic")){this.clickCounter.incrementHit(),this.currentGoblinPosition=null,this.resetTimer();const t=l(this.gamePlay.boardSize);this.currentGoblinPosition=t,this.gamePlay.redrawPositions(t),this.showCharacter(),this.clickCounter.getHitCount()>=10&&(this.gamePlay.showModalMessage(`You win! Your points are ${this.clickCounter.getHitCount()}`,"127881"),this.isGameActive=!1,clearInterval(this.timerId))}else this.clickCounter.incrementMiss(),this.clickCounter.getMissCount()>=5&&(this.gamePlay.showModalMessage("You lose!","129335"),this.isGameActive=!1,clearInterval(this.timerId))}reset(){this.isGameActive=!0,this.clickCounter.reset(),this.currentGoblinPosition=null,this.showCharacter()}}console.log("it works!");const r=new class{constructor(t){this.boardSize=t,this.container=null,this.boardEl=null,this.cells=[],this.cellClickListeners=[],this.cellEnterListeners=[],this.cellLeaveListeners=[],this.isModal=!0,this.missCounter=0,this.maxMisses=5,this.gameActive=!0,this.initModalListener()}bindToDOM(t){if(!(t instanceof HTMLElement))throw new Error("container is not HTMLElement");this.container=t}initModalListener(){document.addEventListener("click",(t=>{"modalHandlerCancel"===t.target.dataset.handler&&this.currentModal&&(this.currentModal.hide(),this.isModal=!1)}))}drawUi(t){this.checkBinding(),this.container.innerHTML='\n      <div class="board-container">\n        <div data-id="board" class="board"></div>\n      </div>\n    ',this.boardEl=this.container.querySelector("[data-id=board]"),this.boardEl.classList.add(t);for(let t=0;t<this.boardSize**2;t+=1){const i=document.createElement("div");i.classList.add("cell","map-tile",`map-tile-${e(t,this.boardSize)}`),i.addEventListener("mouseenter",(t=>this.onCellEnter(t))),i.addEventListener("mouseleave",(t=>this.onCellLeave(t))),i.addEventListener("click",(t=>this.onCellClick(t))),this.boardEl.append(i)}this.cells=Array.from(this.boardEl.children)}redrawPositions(t){if(this.gameActive){for(const t of this.cells)t.innerHTML="";if(void 0!==t&&t>=0&&t<this.cells.length){const e=this.boardEl.children[t],i=document.createElement("div");i.classList.add("character","generic"),e.append(i)}}}addCellEnterListener(t){this.cellEnterListeners.push(t)}addCellLeaveListener(t){this.cellLeaveListeners.push(t)}addCellClickListener(t){this.cellClickListeners.push(t)}onCellEnter(t){t.preventDefault();const e=this.cells.indexOf(t.currentTarget);this.cellEnterListeners.forEach((t=>t.call(null,e)))}onCellLeave(t){t.preventDefault();const e=this.cells.indexOf(t.currentTarget);this.cellLeaveListeners.forEach((t=>t.call(null,e)))}onCellClick(t){const e=this.cells.indexOf(t.currentTarget);this.cellClickListeners.forEach((t=>t.call(null,e))),this.missCounter=0}selectCell(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"yellow";this.deselectCell(t),this.cells[t].classList.add("selected",`selected-${e}`)}deselectCell(t){const e=this.cells[t];e.classList.remove(...Array.from(e.classList).filter((t=>t.startsWith("selected"))))}hideCellTooltip(t){this.cells[t].title=""}setCursor(t){this.boardEl.style.cursor=t}checkBinding(){if(null===this.container)throw new Error("GamePlay not bind to DOM")}showModalMessage(t,e){this.isModal&&(this.isModal=!0,this.gameActive=!1,this.showModal(t,e))}showModal(t,e){const s=new i({title:t,content:`&#${e}`,footerButtons:[{class:"btn btn__cancel",text:"Close",handler:"modalHandlerCancel"},{class:"btn btn__confirm",text:"Новая игра",handler:"modalHandlerConfirm"}]});document.querySelector(".btn__confirm").addEventListener("click",(()=>{s.hide(),window.location.reload()})),this.currentModal=s,s.show()}}(4);r.bindToDOM(document.querySelector("#game-container"));new a(r).init();const c=new a(r);r.onRestart=()=>{c.resetGame()}})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,